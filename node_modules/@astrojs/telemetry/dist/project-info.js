import { execSync } from "child_process";
import { createHash } from "node:crypto";
function createAnonymousValue(payload) {
  if (payload === "") {
    return payload;
  }
  const hash = createHash("sha256");
  hash.update(payload);
  return hash.digest("hex");
}
function getProjectIdFromGit() {
  try {
    const originBuffer = execSync(`git rev-list --max-parents=0 HEAD`, {
      timeout: 500,
      stdio: [0, "pipe", 0]
    });
    return String(originBuffer).trim();
  } catch (_) {
    return null;
  }
}
function getProjectInfo(isCI) {
  const projectIdFromGit = getProjectIdFromGit();
  if (projectIdFromGit) {
    return {
      isGit: true,
      anonymousProjectId: createAnonymousValue(projectIdFromGit)
    };
  }
  return {
    isGit: false,
    anonymousProjectId: isCI ? "" : createAnonymousValue(process.cwd())
  };
}
export {
  getProjectInfo
};
